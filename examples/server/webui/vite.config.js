
import { viteSingleFile } from 'vite-plugin-singlefile';
import path from 'path';
import fs from 'fs';

const MAX_BUNDLE_SIZE = 1024 * 1024; // only increase when absolutely necessary

const GUIDE_FOR_FRONTEND = `
<!--
  This is a single file build of the frontend.
  It is automatically generated by the build process.
  Do not edit this file directly.
  To make changes, refer to the "Web UI" section in the README.
-->
`.trim();

const BUILD_PLUGINS = [
  viteSingleFile(),
  (function llamaCppPlugin() {
    let config;
    return {
      name: 'llamacpp:build',
      apply: 'build',
      async configResolved(_config) {
        config = _config;
      },
      writeBundle() {
        const outputIndexHtml = path.join(config.build.outDir, 'index.html');
        const content = fs.readFileSync(outputIndexHtml, 'utf-8');

        if (content.length > MAX_BUNDLE_SIZE) {
          throw new Error(
            `Bundle size is too large (${Math.ceil(content.length / 1024)} KB).\n` +
            `Please reduce the size of the frontend or increase MAX_BUNDLE_SIZE in vite.config.js.\n`,
          );
        }

        const targetOutputFile = path.join(config.build.outDir, '../../public/index.html');
        fs.writeFileSync(targetOutputFile, GUIDE_FOR_FRONTEND + '\n' + content);
      }
    }
  })(),
];

/** @type {import('vite').UserConfig} */
export default {
  plugins: process.env.ANALYZE ? [] : BUILD_PLUGINS,
};
